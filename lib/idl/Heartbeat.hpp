// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file Heartbeat.hpp
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool fastddsgen.
 */

#ifndef FAST_DDS_GENERATED__HEARTBEAT_HEARTBEAT_HPP
#define FAST_DDS_GENERATED__HEARTBEAT_HEARTBEAT_HPP

#include <cstdint>
#include <utility>
#include "Header.hpp"

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(HEARTBEAT_SOURCE)
#define HEARTBEAT_DllAPI __declspec( dllexport )
#else
#define HEARTBEAT_DllAPI __declspec( dllimport )
#endif // HEARTBEAT_SOURCE
#else
#define HEARTBEAT_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define HEARTBEAT_DllAPI
#endif // _WIN32

namespace Heartbeat {

/*!
 * @brief This class represents the structure Heartbeat defined by the user in the IDL file.
 * @ingroup Heartbeat
 */
class Heartbeat
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport Heartbeat()
    {
    }

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~Heartbeat()
    {
    }

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object Heartbeat that will be copied.
     */
    eProsima_user_DllExport Heartbeat(
            const Heartbeat& x)
    {
                    m_header = x.m_header;

    }

    /*!
     * @brief Move constructor.
     * @param x Reference to the object Heartbeat that will be copied.
     */
    eProsima_user_DllExport Heartbeat(
            Heartbeat&& x) noexcept
    {
        m_header = std::move(x.m_header);
    }

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object Heartbeat that will be copied.
     */
    eProsima_user_DllExport Heartbeat& operator =(
            const Heartbeat& x)
    {

                    m_header = x.m_header;

        return *this;
    }

    /*!
     * @brief Move assignment.
     * @param x Reference to the object Heartbeat that will be copied.
     */
    eProsima_user_DllExport Heartbeat& operator =(
            Heartbeat&& x) noexcept
    {

        m_header = std::move(x.m_header);
        return *this;
    }

    /*!
     * @brief Comparison operator.
     * @param x Heartbeat object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const Heartbeat& x) const
    {
        return (m_header == x.m_header);
    }

    /*!
     * @brief Comparison operator.
     * @param x Heartbeat object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const Heartbeat& x) const
    {
        return !(*this == x);
    }

    /*!
     * @brief This function copies the value in member header
     * @param _header New value to be copied in member header
     */
    eProsima_user_DllExport void header(
            const Header& _header)
    {
        m_header = _header;
    }

    /*!
     * @brief This function moves the value in member header
     * @param _header New value to be moved in member header
     */
    eProsima_user_DllExport void header(
            Header&& _header)
    {
        m_header = std::move(_header);
    }

    /*!
     * @brief This function returns a constant reference to member header
     * @return Constant reference to member header
     */
    eProsima_user_DllExport const Header& header() const
    {
        return m_header;
    }

    /*!
     * @brief This function returns a reference to member header
     * @return Reference to member header
     */
    eProsima_user_DllExport Header& header()
    {
        return m_header;
    }



private:

    Header m_header;

};

} // namespace Heartbeat

#endif // _FAST_DDS_GENERATED_HEARTBEAT_HEARTBEAT_HPP_


